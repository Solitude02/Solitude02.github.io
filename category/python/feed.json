{
    "version": "https://jsonfeed.org/version/1",
    "title": "且辞千山 • All posts by \"python\" category",
    "description": "哀吾生之须臾",
    "home_page_url": "http://www.starnever.love",
    "items": [
        {
            "id": "http://www.starnever.love/Python%E8%AF%95%E9%A2%98%E5%9B%9E%E5%BF%86/",
            "url": "http://www.starnever.love/Python%E8%AF%95%E9%A2%98%E5%9B%9E%E5%BF%86/",
            "title": "Python试题回忆",
            "date_published": "2023-03-06T17:16:29.000Z",
            "content_html": "<div class=\"note danger no-icon\">\n<p>2023-3-10 15:14:19<br />\n 添加了能回忆起来的代码</p>\n</div>\n<h3 id=\"选择\"><a class=\"anchor\" href=\"#选择\">#</a> 选择</h3>\n<p>挺常规的都没什么印象了，就是有两题没有正确答案有点印象。</p>\n<ul>\n<li>一个是循环输出，print 函数 <code>end＝';'</code> ，正确答案是 <code>1;2;4;5;</code>  但是答案里面多了个 7，而 <code>range是左闭右开的区间</code> 不包括右边的</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\";\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>另一个是列表里面嵌套了列表字符串什么的，然后问输出的 <code>ls[1][1]</code>  是什么，原来的题目是 <code>ls[1][2]</code>  应该是会报错因为 <code>ls[1]</code>  里面只有两个元素，一个列表和一个数</li>\n</ul>\n<h3 id=\"填空\"><a class=\"anchor\" href=\"#填空\">#</a> 填空</h3>\n<ul>\n<li>组合数据类型有哪些，应该是 <code>列表、元组、字典、集合</code> ，四个空</li>\n<li>问一段代码的输出是什么，很简单</li>\n<li>两个表达式，填他们的值，涉及到的运算符有 <code>**</code> 、 <code>//</code> 、 <code>%</code>  等，要注意运算顺序</li>\n<li>bs4 和 request 的作用，我填的 <code>信息提取</code> 和 <code>网页抓取</code></li>\n<li>剩下的忘了</li>\n</ul>\n<h3 id=\"判断\"><a class=\"anchor\" href=\"#判断\">#</a> 判断</h3>\n<ul>\n<li>就一个印象比较深，说全局变量在函数外定义，一般没有缩进， <code>是对的</code> ，很经典，考前刷题见了好几次。考试时候我想的是函数内部写的 <code>global 变量名</code> 扩充作用域。</li>\n</ul>\n<h3 id=\"程序阅读\"><a class=\"anchor\" href=\"#程序阅读\">#</a> 程序阅读</h3>\n<ul>\n<li>一个是 numpy 库的印象最深（因为不怎么会），考了 <code>reshape</code> 、 <code>resize</code> 、 <code>取值</code> 、 <code>where</code>  几个函数，都是 print 语句输出的，写输出的数组</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>arr<span class=\"token operator\">></span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># [[ 1  2]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#  [ 3  4]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#  [ 5  6]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#  [ 7  8]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#  [ 9 10]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#  [11 12]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#  [13 14]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#  [15 16]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#  [17 18]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#  [19 20]]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># None</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># [1 9]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># [[1 2 3]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#  [4 5 6]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#  [7 8 1]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#  [1 1 1]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#  [1 1 1]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#  [1 1 1]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#  [1 1 0]]</span></pre></td></tr></table></figure><ul>\n<li>有一个文件的<s>忘了是读程序还是写程序</s>，要求每一行后面写注释，唯一要注意的应该只有 <code>r只读模式</code> 和 <code>w+读写模式</code> 这几个。</li>\n<li><s>另一个忘了</s> try-except 结构的一段代码，找错并写出正确的就是冒号、缩进还有 input 输入两个数</li>\n</ul>\n<h3 id=\"写程序\"><a class=\"anchor\" href=\"#写程序\">#</a> 写程序</h3>\n<div class=\"note primary\">\n<p><em>要求写一个函数，当场问老师能不能写两个或者是写函数和 ' 主程序 '（没想起来怎么说）他说不行，我说你这考递归那要不就函数嵌套他说对 ［无语.jpg］</em></p>\n</div>\n<ul>\n<li>递归，类似斐波那契数列，第四项开始每一项等于前三项的和，写一个函数求这个数列 500 以内偶数的和。</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># F(0)=0,F(1)=1,F(2)=2,F(n)=F(n-3)+F(n-2)+F(n-1)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">F</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> n<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">elif</span> n<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">elif</span> n<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> F<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>F<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>F<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin\">sum</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    n<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> F<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token builtin\">sum</span><span class=\"token operator\">+=</span>F<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        n<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># func()</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 326</span></pre></td></tr></table></figure><ul>\n<li>用 random 库的 <code>randint</code>  生成两个随机整数然后判断是否 <code>互质</code> ，有人不知道互质是什么意思，就是 <code>最大公因数为1</code></li>\n<li>给一个函数，包含 e 和根号，用 numpy 和 matplotlib 库画图，属性的名称倒是给出来了，但是最关键的 <code>plt.plot()</code>  和 <code>plt.show()</code>  得知道，要求颜色是蓝色宽 25pt 实线什么的，还有就是 <code>x和y</code>  是数列，给了 <code>np.linspace</code>  并说了作用，但是没想起来，把他写到了属性里面，有空把程序补到下面</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>np<span class=\"token punctuation\">.</span>power<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 公式忘了随便写的</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>linewidth<span class=\"token operator\">=</span><span class=\"token string\">'25'</span><span class=\"token punctuation\">,</span>linestyle<span class=\"token operator\">=</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>举个例子说明 break 和 continue 的区别，送分题，写了一段循环然后讲一下就可以了</li>\n</ul>\n",
            "tags": [
                "期末复习"
            ]
        },
        {
            "id": "http://www.starnever.love/Python%E6%98%93%E6%B7%B7%E6%B7%86%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "url": "http://www.starnever.love/Python%E6%98%93%E6%B7%B7%E6%B7%86%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "title": "Python易混淆知识点",
            "date_published": "2023-03-06T12:44:48.000Z",
            "content_html": "<h2 id=\"python语法易混淆点\"><a class=\"anchor\" href=\"#python语法易混淆点\">#</a> Python 语法易混淆点</h2>\n<div class=\"note primary\">\n<p>刚考完 Java 马上要考 Python，总结几个易混淆的知识点</p>\n</div>\n<h3 id=\"基本数据类型\"><a class=\"anchor\" href=\"#基本数据类型\">#</a> 基本数据类型</h3>\n<p>Python：</p>\n<p>  \n<table>\n    <tr>\n        <th rowspan=\"6\">基本数据类型</th>\n        <th rowspan=\"3\">数值类型</th>\n        <td>整形int</td>\n   </tr>\n    <tr>\n        <td>浮点型float</td>\n    </tr>\n    <tr>\n        <td>复数型complex</td>\n    </tr>\n <tr>\n        <td colspan=\"2\">字符串str</td>\n    </tr>\n <tr>\n        <td colspan=\"2\">布尔型bool</td>\n    </tr>\n <tr>\n        <td colspan=\"2\">空类型null</td>\n    </tr>\n</table>\n</p>\n<p>Python 基本数据类型中没有 <code>double</code> 、 <code>short</code> 、 <code>long</code> 、 <code>char</code> 、 <code>byte</code>  类型，但是有 <code>str</code> 、 <code>null</code> 、 <code>complex</code> ，并且布尔类型不是 <code>boolean</code>  而是 <code>bool</code></p>\n<h3 id=\"三目运算符\"><a class=\"anchor\" href=\"#三目运算符\">#</a> 三目运算符</h3>\n<p>Python 中没有 <code>?</code>  运算符，要实现 <code>x&gt;y?x:y</code>  的效果只能 <code>x if x&gt;y else y</code></p>\n<h3 id=\"除法\"><a class=\"anchor\" href=\"#除法\">#</a> 除法</h3>\n<p><code>1/3</code>  是 0.3333… 而不是 <code>0</code> ，Python 的整数除法使用 <code>//</code></p>\n<h3 id=\"运算符\"><a class=\"anchor\" href=\"#运算符\">#</a> 运算符</h3>\n<p>Java： <code>&amp;&amp;</code> 、 <code>||</code> 、 <code>!</code> <br />\nPython： <code>and</code> 、 <code>or</code> 、 <code>not</code></p>\n<h3 id=\"保留字\"><a class=\"anchor\" href=\"#保留字\">#</a> 保留字</h3>\n<p>Python 有 33 个保留字，Java 中用到的 <code>do</code> Python 中是没有的</p>\n<div class=\"note primary\">\n<p>欢迎留言评论区补充</p>\n</div>\n",
            "tags": [
                "期末复习"
            ]
        }
    ]
}